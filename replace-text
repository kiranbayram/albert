#!/bin/bash

MY_DIR="$(dirname "$0")"
source "$MY_DIR/util"

# A POSIX variable
OPTIND=2         # Reset in case getopts has been used previously in the shell. Value is 2 because this is a sub-script.
# TODO: Set OPTIND to 1 when this script is called directly

YARN=0
SBT=0

while getopts "sy:" opt; do
    case "$opt" in
    y)	YARN=1
        ;;
    s)  SBT=1
        ;;
    *)  echo "Invalid option"
        exit 1
        ;;
    esac
done

shift $((OPTIND-1))

FILE="$1"
SEARCH_TEXT="$2"
NEW_TEXT="$3"
COMMIT_MSG="$4"

check_access_token

replace_text(){
    SEPARATOR="~"

    # Use another separator if input strings contain default separator
    if [[ "$SEARCH_TEXT$NEW_TEXT" = *"$SEPARATOR"* ]]; then
        echo "It's there!"
        SEPARATOR="%"
    fi

	gsed -i "s$SEPARATOR$SEARCH_TEXT$SEPARATOR$NEW_TEXT$SEPARATOR" $FILE
}

REPO_NAMES=$(get_repos)

for REPO in $REPO_NAMES; do
	echo "$(tput bold)=====$REPO=====$(tput sgr0)"
	cd ~/git/$REPO
	if [ $? -ne 0 ]; then
		git clone git@github.com:Scout24/$REPO.git
		cd $REPO
	fi


	if [ -f "$FILE" ]; then

        grep -q "$SEARCH_TEXT" "$FILE"
        if [ $? -eq 0 ]; then
			git_refresh

			replace_text

            if [[ $SBT == 1 ]]; then
                aws_login as24dev PowerUserAccess
                if [ -f ./sbt ]; then
                    ./sbt clean test
                else
                    sbt clean test
                fi
            fi

            if [[ $YARN == 1 ]]; then
                yarn install
                gulp test
            fi

			git diff

			read -p "Should i commit and push changes? [y/n] " -n 1 -r
			echo

			if [[ $REPLY =~ ^[Yy]$ ]]; then
                git_commit_and_push
			else
				git stash
                read -p "Should i open the original file with vim? [y/n] " -n 1 -r
			    echo

                if [[ $REPLY =~ ^[Yy]$ ]]; then
                    vim $FILE
                    git diff

                    read -p "Should i commit and push changes? [y/n]" -n 1 -r
			        echo

                    if [[ $REPLY =~ ^[Yy]$ ]]; then
                        git_commit_and_push
                    else
                        git stash
                    fi
                else
                    git stash
                fi
			fi
        fi
	fi

	cd ~/git

    continue
done;
