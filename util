#!/bin/bash

MY_DIR="$(dirname "$0")"

check_access_token(){
    if [[ "$ACCESS_TOKEN" == "" && -f ~/.github_token ]]; then
        ACCESS_TOKEN=`cat ~/.github_token`
    fi

    if [[ "$ACCESS_TOKEN" == "" ]]; then
        echo "Please set env variable ACCESS_TOKEN to a Github access token or store it in ~/.github_token; go to https://github.com/settings/tokens to create one."
        exit 1;
    fi
}

get_repos(){
    TEAM_ID=`cat $MY_DIR/team-id.albert.txt`
    
    # filter out repos our team is not admin of; otherwise, e.g. security-configuration would appear in the list as of now (2017-12)
    REPO_NAME_FILTER="map(select(.permissions.admin == true)) | map(.name) | .[]"

    http GET "https://api.github.com/teams/$TEAM_ID/repos?per_page=100&access_token=$ACCESS_TOKEN" | jq -r "$REPO_NAME_FILTER" | sort
}

# TODO: Make this function safer, so that we don't accidentally cause people to lose changes
git_refresh(){
    git stash
    git checkout master
    git pull --rebase
}

git_commit_and_push(){
    COMMIT_MSG="$1"
    DRY_RUN="$2"

    if [[ $DRY_RUN == 0 ]]; then
        git add -A
        git commit -m "$COMMIT_MSG"
        git push
    else
        git stash >> /dev/null
        echo "Would have committed with message '$COMMIT_MSG' and pushed it to master!"
    fi
}

aws_login () { 
    eval "$(scloud account login -e "$1" "$2")"
}
