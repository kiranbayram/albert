#!/bin/bash

brew install gnu-sed
brew install httpie
brew install jq

if [[ "$ACCESS_TOKEN" == "" && -f ~/.github_token ]]; then
    ACCESS_TOKEN=`cat ~/.github_token`
fi

if [[ "$ACCESS_TOKEN" == "" ]]; then
    echo "Please set env variable ACCESS_TOKEN to a Github access token or store it in ~/.github_token; go to https://github.com/settings/tokens to create one."
    exit 1;
fi

GIVEN_NAME=$1

# TEAMS=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN"`

# filter out repos our team is not admin of; otherwise, e.g. security-configuration would appear in the list as of now (2017-12)
TEAM_FILTER="map(select(.name | contains(\"$GIVEN_NAME\"))) | map(.name, .id)"

TEAM_ID_FILTER="map(select(.name | contains(\"$GIVEN_NAME\"))) | map(.name, .id) | .[1]"

TEAM_INFO=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN" | jq "$TEAM_FILTER"`
TEAM_ID=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN" | jq "$TEAM_ID_FILTER"`

echo "Found team name and id: $TEAM_INFO"
echo

read -p "Is this correct team? [y/n] " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo $TEAM_ID > team-id.albert.txt
else
    read -p "Please enter team github slug (check the url):"

    if [[ "$REPLY" == "" ]]; then
        echo "Empty slug is not accepted. Please use correct team name or slug."
        exit 1
    fi

    TEAM_ID_FILTER="map(select(.slug | contains(\"$REPLY\"))) | map(.name, .id) | .[1]"
    TEAM_ID=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN" | jq "$TEAM_ID_FILTER"`

    echo $TEAM_ID

    if [[ "$TEAM_ID" == "" ]] || [[ "$TEAM_ID" == null ]]; then
        echo "Given slug wasn't found! Please use correct team name or slug."
        exit 1
    else
        echo $TEAM_ID > team-id.albert.txt
    fi
fi

