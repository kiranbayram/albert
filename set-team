#!/bin/bash

USAGE="Sets or changes github team id which is needed for all operations.\n"
USAGE+="Usage: albert $(basename "$0") \"github team name\"\n"
USAGE+="Example: albert $(basename "$0") \"ConMon\""

([[ "$1" == "help" ]] || [[ "$2" == "help" ]] ) && { echo -e "$USAGE"; exit 0; }

MY_DIR="$(dirname "$0")"
source "$MY_DIR/util"

check_access_token

GIVEN_NAME="$2"
[[ "$GIVEN_NAME" == "" ]] && { GIVEN_NAME="$1"; }

TEAM_FILTER="map(select(.name | contains(\"$GIVEN_NAME\"))) | map(.name, .id)"
TEAM_ID_FILTER="map(select(.name | contains(\"$GIVEN_NAME\"))) | map(.name, .id) | .[1]"

TEAM_INFO=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN" | jq "$TEAM_FILTER"`
TEAM_ID=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN" | jq "$TEAM_ID_FILTER"`

echo -e "Found team name and id: $TEAM_INFO\n"

read -p "Is this correct team? [y/n] " -n 1 -r; echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo $TEAM_ID > $MY_DIR/team-id.albert.txt
else
    read -p "Please enter team github slug (check the url):"

    if [[ "$REPLY" == "" ]]; then
        echo "Empty slug is not accepted. Please use correct team name or slug."
        exit 1
    fi

    TEAM_ID_FILTER="map(select(.slug | contains(\"$REPLY\"))) | map(.name, .id) | .[1]"
    TEAM_ID=`http GET "https://api.github.com/orgs/Scout24/teams?access_token=$ACCESS_TOKEN" | jq "$TEAM_ID_FILTER"`

    if [[ "$TEAM_ID" == "" ]] || [[ "$TEAM_ID" == null ]]; then
        echo "Given slug wasn't found! Please use correct team name or slug."
        exit 1
    else
        echo $TEAM_ID > $MY_DIR/team-id.albert.txt
    fi
fi

exit 0
